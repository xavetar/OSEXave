/*
 * Copyright 2023 Stanislav Mikhailov (xavetar)
 *
 * Licensed under the Creative Commons Zero v1.0 Universal (CC0) License.
 * You may obtain a copy of the License at
 *
 *     http://creativecommons.org/publicdomain/zero/1.0/
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the CC0 license is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// It is strictly forbidden to use the from_code method, respected Microsoft decided to define
// duplicate codes, but by defining different constant names, therefore, when using these codes,
// it is mandatory to use through from_name, and not from_code. Otherwise, it may cause undefined
// behavior or an unknown exception. Because one code corresponds to several constants.

use super::{RawError};

#[derive(Clone, Debug, Copy, Eq, Hash, Ord, PartialEq, PartialOrd)]
pub enum HTTP {
    HTTP_E_STATUS_UNEXPECTED,
    MREGISTER_E_DEVICE_MESSAGE_FORMAT_ERROR,
    MREGISTER_E_DEVICE_AUTHENTICATION_ERROR,
    HTTP_E_STATUS_UNEXPECTED_REDIRECTION,
    MREGISTER_E_DEVICE_AUTHORIZATION_ERROR,
    HTTP_E_STATUS_UNEXPECTED_CLIENT_ERROR,
    MREGISTER_E_DEVICE_CERTIFCATEREQUEST_ERROR,
    HTTP_E_STATUS_UNEXPECTED_SERVER_ERROR,
    MREGISTER_E_DEVICE_CONFIGMGRSERVER_ERROR,
    MREGISTER_E_DEVICE_INTERNALSERVICE_ERROR,
    MREGISTER_E_DEVICE_INVALIDSECURITY_ERROR,
    MREGISTER_E_DEVICE_UNKNOWN_ERROR,
    MREGISTER_E_REGISTRATION_IN_PROGRESS,
    MREGISTER_E_DEVICE_ALREADY_REGISTERED,
    MREGISTER_E_DEVICE_NOT_REGISTERED,
    MREGISTER_E_DISCOVERY_REDIRECTED,
    MREGISTER_E_DEVICE_NOT_AD_REGISTERED_ERROR,
    MREGISTER_E_DISCOVERY_FAILED,
    HTTP_E_STATUS_AMBIGUOUS,
    HTTP_E_STATUS_MOVED,
    HTTP_E_STATUS_REDIRECT,
    HTTP_E_STATUS_REDIRECT_METHOD,
    HTTP_E_STATUS_NOT_MODIFIED,
    HTTP_E_STATUS_USE_PROXY,
    HTTP_E_STATUS_REDIRECT_KEEP_VERB,
    HTTP_E_STATUS_BAD_REQUEST,
    HTTP_E_STATUS_DENIED,
    HTTP_E_STATUS_PAYMENT_REQ,
    HTTP_E_STATUS_FORBIDDEN,
    HTTP_E_STATUS_NOT_FOUND,
    HTTP_E_STATUS_BAD_METHOD,
    HTTP_E_STATUS_NONE_ACCEPTABLE,
    HTTP_E_STATUS_PROXY_AUTH_REQ,
    HTTP_E_STATUS_REQUEST_TIMEOUT,
    HTTP_E_STATUS_CONFLICT,
    HTTP_E_STATUS_GONE,
    HTTP_E_STATUS_LENGTH_REQUIRED,
    HTTP_E_STATUS_PRECOND_FAILED,
    HTTP_E_STATUS_REQUEST_TOO_LARGE,
    HTTP_E_STATUS_URI_TOO_LONG,
    HTTP_E_STATUS_UNSUPPORTED_MEDIA,
    HTTP_E_STATUS_RANGE_NOT_SATISFIABLE,
    HTTP_E_STATUS_EXPECTATION_FAILED,
    HTTP_E_STATUS_SERVER_ERROR,
    HTTP_E_STATUS_NOT_SUPPORTED,
    HTTP_E_STATUS_BAD_GATEWAY,
    HTTP_E_STATUS_SERVICE_UNAVAIL,
    HTTP_E_STATUS_GATEWAY_TIMEOUT,
    HTTP_E_STATUS_VERSION_NOT_SUP,
}

impl HTTP {
    pub fn code(&self) -> u32 {
        return match self {
            HTTP::HTTP_E_STATUS_UNEXPECTED => 0x80190001 as u32,
            HTTP::MREGISTER_E_DEVICE_MESSAGE_FORMAT_ERROR => 0x80190001 as u32,
            HTTP::MREGISTER_E_DEVICE_AUTHENTICATION_ERROR => 0x80190002 as u32,
            HTTP::HTTP_E_STATUS_UNEXPECTED_REDIRECTION => 0x80190003 as u32,
            HTTP::MREGISTER_E_DEVICE_AUTHORIZATION_ERROR => 0x80190003 as u32,
            HTTP::HTTP_E_STATUS_UNEXPECTED_CLIENT_ERROR => 0x80190004 as u32,
            HTTP::MREGISTER_E_DEVICE_CERTIFCATEREQUEST_ERROR => 0x80190004 as u32,
            HTTP::HTTP_E_STATUS_UNEXPECTED_SERVER_ERROR => 0x80190005 as u32,
            HTTP::MREGISTER_E_DEVICE_CONFIGMGRSERVER_ERROR => 0x80190005 as u32,
            HTTP::MREGISTER_E_DEVICE_INTERNALSERVICE_ERROR => 0x80190006 as u32,
            HTTP::MREGISTER_E_DEVICE_INVALIDSECURITY_ERROR => 0x80190007 as u32,
            HTTP::MREGISTER_E_DEVICE_UNKNOWN_ERROR => 0x80190008 as u32,
            HTTP::MREGISTER_E_REGISTRATION_IN_PROGRESS => 0x80190009 as u32,
            HTTP::MREGISTER_E_DEVICE_ALREADY_REGISTERED => 0x8019000A as u32,
            HTTP::MREGISTER_E_DEVICE_NOT_REGISTERED => 0x8019000B as u32,
            HTTP::MREGISTER_E_DISCOVERY_REDIRECTED => 0x8019000C as u32,
            HTTP::MREGISTER_E_DEVICE_NOT_AD_REGISTERED_ERROR => 0x8019000D as u32,
            HTTP::MREGISTER_E_DISCOVERY_FAILED => 0x8019000E as u32,
            HTTP::HTTP_E_STATUS_AMBIGUOUS => 0x8019012C as u32,
            HTTP::HTTP_E_STATUS_MOVED => 0x8019012D as u32,
            HTTP::HTTP_E_STATUS_REDIRECT => 0x8019012E as u32,
            HTTP::HTTP_E_STATUS_REDIRECT_METHOD => 0x8019012F as u32,
            HTTP::HTTP_E_STATUS_NOT_MODIFIED => 0x80190130 as u32,
            HTTP::HTTP_E_STATUS_USE_PROXY => 0x80190131 as u32,
            HTTP::HTTP_E_STATUS_REDIRECT_KEEP_VERB => 0x80190133 as u32,
            HTTP::HTTP_E_STATUS_BAD_REQUEST => 0x80190190 as u32,
            HTTP::HTTP_E_STATUS_DENIED => 0x80190191 as u32,
            HTTP::HTTP_E_STATUS_PAYMENT_REQ => 0x80190192 as u32,
            HTTP::HTTP_E_STATUS_FORBIDDEN => 0x80190193 as u32,
            HTTP::HTTP_E_STATUS_NOT_FOUND => 0x80190194 as u32,
            HTTP::HTTP_E_STATUS_BAD_METHOD => 0x80190195 as u32,
            HTTP::HTTP_E_STATUS_NONE_ACCEPTABLE => 0x80190196 as u32,
            HTTP::HTTP_E_STATUS_PROXY_AUTH_REQ => 0x80190197 as u32,
            HTTP::HTTP_E_STATUS_REQUEST_TIMEOUT => 0x80190198 as u32,
            HTTP::HTTP_E_STATUS_CONFLICT => 0x80190199 as u32,
            HTTP::HTTP_E_STATUS_GONE => 0x8019019A as u32,
            HTTP::HTTP_E_STATUS_LENGTH_REQUIRED => 0x8019019B as u32,
            HTTP::HTTP_E_STATUS_PRECOND_FAILED => 0x8019019C as u32,
            HTTP::HTTP_E_STATUS_REQUEST_TOO_LARGE => 0x8019019D as u32,
            HTTP::HTTP_E_STATUS_URI_TOO_LONG => 0x8019019E as u32,
            HTTP::HTTP_E_STATUS_UNSUPPORTED_MEDIA => 0x8019019F as u32,
            HTTP::HTTP_E_STATUS_RANGE_NOT_SATISFIABLE => 0x801901A0 as u32,
            HTTP::HTTP_E_STATUS_EXPECTATION_FAILED => 0x801901A1 as u32,
            HTTP::HTTP_E_STATUS_SERVER_ERROR => 0x801901F4 as u32,
            HTTP::HTTP_E_STATUS_NOT_SUPPORTED => 0x801901F5 as u32,
            HTTP::HTTP_E_STATUS_BAD_GATEWAY => 0x801901F6 as u32,
            HTTP::HTTP_E_STATUS_SERVICE_UNAVAIL => 0x801901F7 as u32,
            HTTP::HTTP_E_STATUS_GATEWAY_TIMEOUT => 0x801901F8 as u32,
            HTTP::HTTP_E_STATUS_VERSION_NOT_SUP => 0x801901F9 as u32,
        }
    }

    pub fn error(&self) -> RawError {
        return match self {
            HTTP::HTTP_E_STATUS_UNEXPECTED => RawError::Kind(HTTP::HTTP_E_STATUS_UNEXPECTED),
            HTTP::MREGISTER_E_DEVICE_MESSAGE_FORMAT_ERROR => RawError::Kind(HTTP::MREGISTER_E_DEVICE_MESSAGE_FORMAT_ERROR),
            HTTP::MREGISTER_E_DEVICE_AUTHENTICATION_ERROR => RawError::Kind(HTTP::MREGISTER_E_DEVICE_AUTHENTICATION_ERROR),
            HTTP::HTTP_E_STATUS_UNEXPECTED_REDIRECTION => RawError::Kind(HTTP::HTTP_E_STATUS_UNEXPECTED_REDIRECTION),
            HTTP::MREGISTER_E_DEVICE_AUTHORIZATION_ERROR => RawError::Kind(HTTP::MREGISTER_E_DEVICE_AUTHORIZATION_ERROR),
            HTTP::HTTP_E_STATUS_UNEXPECTED_CLIENT_ERROR => RawError::Kind(HTTP::HTTP_E_STATUS_UNEXPECTED_CLIENT_ERROR),
            HTTP::MREGISTER_E_DEVICE_CERTIFCATEREQUEST_ERROR => RawError::Kind(HTTP::MREGISTER_E_DEVICE_CERTIFCATEREQUEST_ERROR),
            HTTP::HTTP_E_STATUS_UNEXPECTED_SERVER_ERROR => RawError::Kind(HTTP::HTTP_E_STATUS_UNEXPECTED_SERVER_ERROR),
            HTTP::MREGISTER_E_DEVICE_CONFIGMGRSERVER_ERROR => RawError::Kind(HTTP::MREGISTER_E_DEVICE_CONFIGMGRSERVER_ERROR),
            HTTP::MREGISTER_E_DEVICE_INTERNALSERVICE_ERROR => RawError::Kind(HTTP::MREGISTER_E_DEVICE_INTERNALSERVICE_ERROR),
            HTTP::MREGISTER_E_DEVICE_INVALIDSECURITY_ERROR => RawError::Kind(HTTP::MREGISTER_E_DEVICE_INVALIDSECURITY_ERROR),
            HTTP::MREGISTER_E_DEVICE_UNKNOWN_ERROR => RawError::Kind(HTTP::MREGISTER_E_DEVICE_UNKNOWN_ERROR),
            HTTP::MREGISTER_E_REGISTRATION_IN_PROGRESS => RawError::Kind(HTTP::MREGISTER_E_REGISTRATION_IN_PROGRESS),
            HTTP::MREGISTER_E_DEVICE_ALREADY_REGISTERED => RawError::Kind(HTTP::MREGISTER_E_DEVICE_ALREADY_REGISTERED),
            HTTP::MREGISTER_E_DEVICE_NOT_REGISTERED => RawError::Kind(HTTP::MREGISTER_E_DEVICE_NOT_REGISTERED),
            HTTP::MREGISTER_E_DISCOVERY_REDIRECTED => RawError::Kind(HTTP::MREGISTER_E_DISCOVERY_REDIRECTED),
            HTTP::MREGISTER_E_DEVICE_NOT_AD_REGISTERED_ERROR => RawError::Kind(HTTP::MREGISTER_E_DEVICE_NOT_AD_REGISTERED_ERROR),
            HTTP::MREGISTER_E_DISCOVERY_FAILED => RawError::Kind(HTTP::MREGISTER_E_DISCOVERY_FAILED),
            HTTP::HTTP_E_STATUS_AMBIGUOUS => RawError::Kind(HTTP::HTTP_E_STATUS_AMBIGUOUS),
            HTTP::HTTP_E_STATUS_MOVED => RawError::Kind(HTTP::HTTP_E_STATUS_MOVED),
            HTTP::HTTP_E_STATUS_REDIRECT => RawError::Kind(HTTP::HTTP_E_STATUS_REDIRECT),
            HTTP::HTTP_E_STATUS_REDIRECT_METHOD => RawError::Kind(HTTP::HTTP_E_STATUS_REDIRECT_METHOD),
            HTTP::HTTP_E_STATUS_NOT_MODIFIED => RawError::Kind(HTTP::HTTP_E_STATUS_NOT_MODIFIED),
            HTTP::HTTP_E_STATUS_USE_PROXY => RawError::Kind(HTTP::HTTP_E_STATUS_USE_PROXY),
            HTTP::HTTP_E_STATUS_REDIRECT_KEEP_VERB => RawError::Kind(HTTP::HTTP_E_STATUS_REDIRECT_KEEP_VERB),
            HTTP::HTTP_E_STATUS_BAD_REQUEST => RawError::Kind(HTTP::HTTP_E_STATUS_BAD_REQUEST),
            HTTP::HTTP_E_STATUS_DENIED => RawError::Kind(HTTP::HTTP_E_STATUS_DENIED),
            HTTP::HTTP_E_STATUS_PAYMENT_REQ => RawError::Kind(HTTP::HTTP_E_STATUS_PAYMENT_REQ),
            HTTP::HTTP_E_STATUS_FORBIDDEN => RawError::Kind(HTTP::HTTP_E_STATUS_FORBIDDEN),
            HTTP::HTTP_E_STATUS_NOT_FOUND => RawError::Kind(HTTP::HTTP_E_STATUS_NOT_FOUND),
            HTTP::HTTP_E_STATUS_BAD_METHOD => RawError::Kind(HTTP::HTTP_E_STATUS_BAD_METHOD),
            HTTP::HTTP_E_STATUS_NONE_ACCEPTABLE => RawError::Kind(HTTP::HTTP_E_STATUS_NONE_ACCEPTABLE),
            HTTP::HTTP_E_STATUS_PROXY_AUTH_REQ => RawError::Kind(HTTP::HTTP_E_STATUS_PROXY_AUTH_REQ),
            HTTP::HTTP_E_STATUS_REQUEST_TIMEOUT => RawError::Kind(HTTP::HTTP_E_STATUS_REQUEST_TIMEOUT),
            HTTP::HTTP_E_STATUS_CONFLICT => RawError::Kind(HTTP::HTTP_E_STATUS_CONFLICT),
            HTTP::HTTP_E_STATUS_GONE => RawError::Kind(HTTP::HTTP_E_STATUS_GONE),
            HTTP::HTTP_E_STATUS_LENGTH_REQUIRED => RawError::Kind(HTTP::HTTP_E_STATUS_LENGTH_REQUIRED),
            HTTP::HTTP_E_STATUS_PRECOND_FAILED => RawError::Kind(HTTP::HTTP_E_STATUS_PRECOND_FAILED),
            HTTP::HTTP_E_STATUS_REQUEST_TOO_LARGE => RawError::Kind(HTTP::HTTP_E_STATUS_REQUEST_TOO_LARGE),
            HTTP::HTTP_E_STATUS_URI_TOO_LONG => RawError::Kind(HTTP::HTTP_E_STATUS_URI_TOO_LONG),
            HTTP::HTTP_E_STATUS_UNSUPPORTED_MEDIA => RawError::Kind(HTTP::HTTP_E_STATUS_UNSUPPORTED_MEDIA),
            HTTP::HTTP_E_STATUS_RANGE_NOT_SATISFIABLE => RawError::Kind(HTTP::HTTP_E_STATUS_RANGE_NOT_SATISFIABLE),
            HTTP::HTTP_E_STATUS_EXPECTATION_FAILED => RawError::Kind(HTTP::HTTP_E_STATUS_EXPECTATION_FAILED),
            HTTP::HTTP_E_STATUS_SERVER_ERROR => RawError::Kind(HTTP::HTTP_E_STATUS_SERVER_ERROR),
            HTTP::HTTP_E_STATUS_NOT_SUPPORTED => RawError::Kind(HTTP::HTTP_E_STATUS_NOT_SUPPORTED),
            HTTP::HTTP_E_STATUS_BAD_GATEWAY => RawError::Kind(HTTP::HTTP_E_STATUS_BAD_GATEWAY),
            HTTP::HTTP_E_STATUS_SERVICE_UNAVAIL => RawError::Kind(HTTP::HTTP_E_STATUS_SERVICE_UNAVAIL),
            HTTP::HTTP_E_STATUS_GATEWAY_TIMEOUT => RawError::Kind(HTTP::HTTP_E_STATUS_GATEWAY_TIMEOUT),
            HTTP::HTTP_E_STATUS_VERSION_NOT_SUP => RawError::Kind(HTTP::HTTP_E_STATUS_VERSION_NOT_SUP),
        }
    }

    pub fn description(&self) -> &'static str {
        return match self {
            HTTP::HTTP_E_STATUS_UNEXPECTED => "Unexpected HTTP status code.",
            HTTP::MREGISTER_E_DEVICE_MESSAGE_FORMAT_ERROR => "Windows MDE: Invalid Schema, Message Format Error from server.",
            HTTP::MREGISTER_E_DEVICE_AUTHENTICATION_ERROR => "Windows MDE: Server failed to authenticate the user.",
            HTTP::HTTP_E_STATUS_UNEXPECTED_REDIRECTION => "Unexpected redirection status code (3xx).",
            HTTP::MREGISTER_E_DEVICE_AUTHORIZATION_ERROR => "Windows MDE: User is not authorized to enroll.",
            HTTP::HTTP_E_STATUS_UNEXPECTED_CLIENT_ERROR => "Unexpected client error status code (4xx).",
            HTTP::MREGISTER_E_DEVICE_CERTIFCATEREQUEST_ERROR => "Windows MDE: User has no permission on the cert template or CA unreachable.",
            HTTP::HTTP_E_STATUS_UNEXPECTED_SERVER_ERROR => "Unexpected server error status code (5xx).",
            HTTP::MREGISTER_E_DEVICE_CONFIGMGRSERVER_ERROR => "Windows MDE: Generic Failure from management server, such as DB access error.",
            HTTP::MREGISTER_E_DEVICE_INTERNALSERVICE_ERROR => "Windows MDE: Unhandled exception from server.",
            HTTP::MREGISTER_E_DEVICE_INVALIDSECURITY_ERROR => "Windows MDE: Unhandled exception from server.",
            HTTP::MREGISTER_E_DEVICE_UNKNOWN_ERROR => "Windows MDE: Unknown server error.",
            HTTP::MREGISTER_E_REGISTRATION_IN_PROGRESS => "Windows MDE: Another enrollment operation is currently underway.",
            HTTP::MREGISTER_E_DEVICE_ALREADY_REGISTERED => "Windows MDE: Device is already enrolled.",
            HTTP::MREGISTER_E_DEVICE_NOT_REGISTERED => "Windows MDE: Device is not enrolled.",
            HTTP::MREGISTER_E_DISCOVERY_REDIRECTED => "Windows MDE: Redirection is needed.",
            HTTP::MREGISTER_E_DEVICE_NOT_AD_REGISTERED_ERROR => "Windows MDE: The device is not registered with Active Directory.",
            HTTP::MREGISTER_E_DISCOVERY_FAILED => "Windows MDE: Discovery failed; redirection is needed.",
            HTTP::HTTP_E_STATUS_AMBIGUOUS => "Multiple choices (300).",
            HTTP::HTTP_E_STATUS_MOVED => "Moved permanently (301).",
            HTTP::HTTP_E_STATUS_REDIRECT => "Found (302).",
            HTTP::HTTP_E_STATUS_REDIRECT_METHOD => "See Other (303).",
            HTTP::HTTP_E_STATUS_NOT_MODIFIED => "Not modified (304).",
            HTTP::HTTP_E_STATUS_USE_PROXY => "Use proxy (305).",
            HTTP::HTTP_E_STATUS_REDIRECT_KEEP_VERB => "Temporary redirect (307).",
            HTTP::HTTP_E_STATUS_BAD_REQUEST => "Bad request (400).",
            HTTP::HTTP_E_STATUS_DENIED => "Unauthorized (401).",
            HTTP::HTTP_E_STATUS_PAYMENT_REQ => "Payment required (402).",
            HTTP::HTTP_E_STATUS_FORBIDDEN => "Forbidden (403).",
            HTTP::HTTP_E_STATUS_NOT_FOUND => "Not found (404).",
            HTTP::HTTP_E_STATUS_BAD_METHOD => "Method not allowed (405).",
            HTTP::HTTP_E_STATUS_NONE_ACCEPTABLE => "Not acceptable (406).",
            HTTP::HTTP_E_STATUS_PROXY_AUTH_REQ => "Proxy authentication required (407).",
            HTTP::HTTP_E_STATUS_REQUEST_TIMEOUT => "Request timeout (408).",
            HTTP::HTTP_E_STATUS_CONFLICT => "Conflict (409).",
            HTTP::HTTP_E_STATUS_GONE => "Gone (410).",
            HTTP::HTTP_E_STATUS_LENGTH_REQUIRED => "Length required (411).",
            HTTP::HTTP_E_STATUS_PRECOND_FAILED => "Precondition failed (412).",
            HTTP::HTTP_E_STATUS_REQUEST_TOO_LARGE => "Request entity too large (413).",
            HTTP::HTTP_E_STATUS_URI_TOO_LONG => "Request-URI too long (414).",
            HTTP::HTTP_E_STATUS_UNSUPPORTED_MEDIA => "Unsupported media type (415).",
            HTTP::HTTP_E_STATUS_RANGE_NOT_SATISFIABLE => "Requested range not satisfiable (416).",
            HTTP::HTTP_E_STATUS_EXPECTATION_FAILED => "Expectation failed (417).",
            HTTP::HTTP_E_STATUS_SERVER_ERROR => "Internal server error (500).",
            HTTP::HTTP_E_STATUS_NOT_SUPPORTED => "Not implemented (501).",
            HTTP::HTTP_E_STATUS_BAD_GATEWAY => "Bad gateway (502).",
            HTTP::HTTP_E_STATUS_SERVICE_UNAVAIL => "Service unavailable (503).",
            HTTP::HTTP_E_STATUS_GATEWAY_TIMEOUT => "Gateway timeout (504).",
            HTTP::HTTP_E_STATUS_VERSION_NOT_SUP => "Version not supported (505).",
        }
    }

    pub fn from_name(name: &str) -> HTTP {
        return match name {
            "HTTP_E_STATUS_UNEXPECTED" => HTTP::HTTP_E_STATUS_UNEXPECTED,
            "MREGISTER_E_DEVICE_MESSAGE_FORMAT_ERROR" => HTTP::MREGISTER_E_DEVICE_MESSAGE_FORMAT_ERROR,
            "MREGISTER_E_DEVICE_AUTHENTICATION_ERROR" => HTTP::MREGISTER_E_DEVICE_AUTHENTICATION_ERROR,
            "HTTP_E_STATUS_UNEXPECTED_REDIRECTION" => HTTP::HTTP_E_STATUS_UNEXPECTED_REDIRECTION,
            "MREGISTER_E_DEVICE_AUTHORIZATION_ERROR" => HTTP::MREGISTER_E_DEVICE_AUTHORIZATION_ERROR,
            "HTTP_E_STATUS_UNEXPECTED_CLIENT_ERROR" => HTTP::HTTP_E_STATUS_UNEXPECTED_CLIENT_ERROR,
            "MREGISTER_E_DEVICE_CERTIFCATEREQUEST_ERROR" => HTTP::MREGISTER_E_DEVICE_CERTIFCATEREQUEST_ERROR,
            "HTTP_E_STATUS_UNEXPECTED_SERVER_ERROR" => HTTP::HTTP_E_STATUS_UNEXPECTED_SERVER_ERROR,
            "MREGISTER_E_DEVICE_CONFIGMGRSERVER_ERROR" => HTTP::MREGISTER_E_DEVICE_CONFIGMGRSERVER_ERROR,
            "MREGISTER_E_DEVICE_INTERNALSERVICE_ERROR" => HTTP::MREGISTER_E_DEVICE_INTERNALSERVICE_ERROR,
            "MREGISTER_E_DEVICE_INVALIDSECURITY_ERROR" => HTTP::MREGISTER_E_DEVICE_INVALIDSECURITY_ERROR,
            "MREGISTER_E_DEVICE_UNKNOWN_ERROR" => HTTP::MREGISTER_E_DEVICE_UNKNOWN_ERROR,
            "MREGISTER_E_REGISTRATION_IN_PROGRESS" => HTTP::MREGISTER_E_REGISTRATION_IN_PROGRESS,
            "MREGISTER_E_DEVICE_ALREADY_REGISTERED" => HTTP::MREGISTER_E_DEVICE_ALREADY_REGISTERED,
            "MREGISTER_E_DEVICE_NOT_REGISTERED" => HTTP::MREGISTER_E_DEVICE_NOT_REGISTERED,
            "MREGISTER_E_DISCOVERY_REDIRECTED" => HTTP::MREGISTER_E_DISCOVERY_REDIRECTED,
            "MREGISTER_E_DEVICE_NOT_AD_REGISTERED_ERROR" => HTTP::MREGISTER_E_DEVICE_NOT_AD_REGISTERED_ERROR,
            "MREGISTER_E_DISCOVERY_FAILED" => HTTP::MREGISTER_E_DISCOVERY_FAILED,
            "HTTP_E_STATUS_AMBIGUOUS" => HTTP::HTTP_E_STATUS_AMBIGUOUS,
            "HTTP_E_STATUS_MOVED" => HTTP::HTTP_E_STATUS_MOVED,
            "HTTP_E_STATUS_REDIRECT" => HTTP::HTTP_E_STATUS_REDIRECT,
            "HTTP_E_STATUS_REDIRECT_METHOD" => HTTP::HTTP_E_STATUS_REDIRECT_METHOD,
            "HTTP_E_STATUS_NOT_MODIFIED" => HTTP::HTTP_E_STATUS_NOT_MODIFIED,
            "HTTP_E_STATUS_USE_PROXY" => HTTP::HTTP_E_STATUS_USE_PROXY,
            "HTTP_E_STATUS_REDIRECT_KEEP_VERB" => HTTP::HTTP_E_STATUS_REDIRECT_KEEP_VERB,
            "HTTP_E_STATUS_BAD_REQUEST" => HTTP::HTTP_E_STATUS_BAD_REQUEST,
            "HTTP_E_STATUS_DENIED" => HTTP::HTTP_E_STATUS_DENIED,
            "HTTP_E_STATUS_PAYMENT_REQ" => HTTP::HTTP_E_STATUS_PAYMENT_REQ,
            "HTTP_E_STATUS_FORBIDDEN" => HTTP::HTTP_E_STATUS_FORBIDDEN,
            "HTTP_E_STATUS_NOT_FOUND" => HTTP::HTTP_E_STATUS_NOT_FOUND,
            "HTTP_E_STATUS_BAD_METHOD" => HTTP::HTTP_E_STATUS_BAD_METHOD,
            "HTTP_E_STATUS_NONE_ACCEPTABLE" => HTTP::HTTP_E_STATUS_NONE_ACCEPTABLE,
            "HTTP_E_STATUS_PROXY_AUTH_REQ" => HTTP::HTTP_E_STATUS_PROXY_AUTH_REQ,
            "HTTP_E_STATUS_REQUEST_TIMEOUT" => HTTP::HTTP_E_STATUS_REQUEST_TIMEOUT,
            "HTTP_E_STATUS_CONFLICT" => HTTP::HTTP_E_STATUS_CONFLICT,
            "HTTP_E_STATUS_GONE" => HTTP::HTTP_E_STATUS_GONE,
            "HTTP_E_STATUS_LENGTH_REQUIRED" => HTTP::HTTP_E_STATUS_LENGTH_REQUIRED,
            "HTTP_E_STATUS_PRECOND_FAILED" => HTTP::HTTP_E_STATUS_PRECOND_FAILED,
            "HTTP_E_STATUS_REQUEST_TOO_LARGE" => HTTP::HTTP_E_STATUS_REQUEST_TOO_LARGE,
            "HTTP_E_STATUS_URI_TOO_LONG" => HTTP::HTTP_E_STATUS_URI_TOO_LONG,
            "HTTP_E_STATUS_UNSUPPORTED_MEDIA" => HTTP::HTTP_E_STATUS_UNSUPPORTED_MEDIA,
            "HTTP_E_STATUS_RANGE_NOT_SATISFIABLE" => HTTP::HTTP_E_STATUS_RANGE_NOT_SATISFIABLE,
            "HTTP_E_STATUS_EXPECTATION_FAILED" => HTTP::HTTP_E_STATUS_EXPECTATION_FAILED,
            "HTTP_E_STATUS_SERVER_ERROR" => HTTP::HTTP_E_STATUS_SERVER_ERROR,
            "HTTP_E_STATUS_NOT_SUPPORTED" => HTTP::HTTP_E_STATUS_NOT_SUPPORTED,
            "HTTP_E_STATUS_BAD_GATEWAY" => HTTP::HTTP_E_STATUS_BAD_GATEWAY,
            "HTTP_E_STATUS_SERVICE_UNAVAIL" => HTTP::HTTP_E_STATUS_SERVICE_UNAVAIL,
            "HTTP_E_STATUS_GATEWAY_TIMEOUT" => HTTP::HTTP_E_STATUS_GATEWAY_TIMEOUT,
            "HTTP_E_STATUS_VERSION_NOT_SUP" => HTTP::HTTP_E_STATUS_VERSION_NOT_SUP,
        }
    }
    pub fn from_code(code: u32) -> HTTP {
        return match code {
            0x80190001 => HTTP::HTTP_E_STATUS_UNEXPECTED,
            0x80190001 => HTTP::MREGISTER_E_DEVICE_MESSAGE_FORMAT_ERROR,
            0x80190002 => HTTP::MREGISTER_E_DEVICE_AUTHENTICATION_ERROR,
            0x80190003 => HTTP::HTTP_E_STATUS_UNEXPECTED_REDIRECTION,
            0x80190003 => HTTP::MREGISTER_E_DEVICE_AUTHORIZATION_ERROR,
            0x80190004 => HTTP::HTTP_E_STATUS_UNEXPECTED_CLIENT_ERROR,
            0x80190004 => HTTP::MREGISTER_E_DEVICE_CERTIFCATEREQUEST_ERROR,
            0x80190005 => HTTP::HTTP_E_STATUS_UNEXPECTED_SERVER_ERROR,
            0x80190005 => HTTP::MREGISTER_E_DEVICE_CONFIGMGRSERVER_ERROR,
            0x80190006 => HTTP::MREGISTER_E_DEVICE_INTERNALSERVICE_ERROR,
            0x80190007 => HTTP::MREGISTER_E_DEVICE_INVALIDSECURITY_ERROR,
            0x80190008 => HTTP::MREGISTER_E_DEVICE_UNKNOWN_ERROR,
            0x80190009 => HTTP::MREGISTER_E_REGISTRATION_IN_PROGRESS,
            0x8019000A => HTTP::MREGISTER_E_DEVICE_ALREADY_REGISTERED,
            0x8019000B => HTTP::MREGISTER_E_DEVICE_NOT_REGISTERED,
            0x8019000C => HTTP::MREGISTER_E_DISCOVERY_REDIRECTED,
            0x8019000D => HTTP::MREGISTER_E_DEVICE_NOT_AD_REGISTERED_ERROR,
            0x8019000E => HTTP::MREGISTER_E_DISCOVERY_FAILED,
            0x8019012C => HTTP::HTTP_E_STATUS_AMBIGUOUS,
            0x8019012D => HTTP::HTTP_E_STATUS_MOVED,
            0x8019012E => HTTP::HTTP_E_STATUS_REDIRECT,
            0x8019012F => HTTP::HTTP_E_STATUS_REDIRECT_METHOD,
            0x80190130 => HTTP::HTTP_E_STATUS_NOT_MODIFIED,
            0x80190131 => HTTP::HTTP_E_STATUS_USE_PROXY,
            0x80190133 => HTTP::HTTP_E_STATUS_REDIRECT_KEEP_VERB,
            0x80190190 => HTTP::HTTP_E_STATUS_BAD_REQUEST,
            0x80190191 => HTTP::HTTP_E_STATUS_DENIED,
            0x80190192 => HTTP::HTTP_E_STATUS_PAYMENT_REQ,
            0x80190193 => HTTP::HTTP_E_STATUS_FORBIDDEN,
            0x80190194 => HTTP::HTTP_E_STATUS_NOT_FOUND,
            0x80190195 => HTTP::HTTP_E_STATUS_BAD_METHOD,
            0x80190196 => HTTP::HTTP_E_STATUS_NONE_ACCEPTABLE,
            0x80190197 => HTTP::HTTP_E_STATUS_PROXY_AUTH_REQ,
            0x80190198 => HTTP::HTTP_E_STATUS_REQUEST_TIMEOUT,
            0x80190199 => HTTP::HTTP_E_STATUS_CONFLICT,
            0x8019019A => HTTP::HTTP_E_STATUS_GONE,
            0x8019019B => HTTP::HTTP_E_STATUS_LENGTH_REQUIRED,
            0x8019019C => HTTP::HTTP_E_STATUS_PRECOND_FAILED,
            0x8019019D => HTTP::HTTP_E_STATUS_REQUEST_TOO_LARGE,
            0x8019019E => HTTP::HTTP_E_STATUS_URI_TOO_LONG,
            0x8019019F => HTTP::HTTP_E_STATUS_UNSUPPORTED_MEDIA,
            0x801901A0 => HTTP::HTTP_E_STATUS_RANGE_NOT_SATISFIABLE,
            0x801901A1 => HTTP::HTTP_E_STATUS_EXPECTATION_FAILED,
            0x801901F4 => HTTP::HTTP_E_STATUS_SERVER_ERROR,
            0x801901F5 => HTTP::HTTP_E_STATUS_NOT_SUPPORTED,
            0x801901F6 => HTTP::HTTP_E_STATUS_BAD_GATEWAY,
            0x801901F7 => HTTP::HTTP_E_STATUS_SERVICE_UNAVAIL,
            0x801901F8 => HTTP::HTTP_E_STATUS_GATEWAY_TIMEOUT,
            0x801901F9 => HTTP::HTTP_E_STATUS_VERSION_NOT_SUP,
        }
    }
}
