/*
 * Copyright 2023 Stanislav Mikhailov (xavetar)
 *
 * Licensed under the Creative Commons Zero v1.0 Universal (CC0) License.
 * You may obtain a copy of the License at
 *
 *     http://creativecommons.org/publicdomain/zero/1.0/
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the CC0 license is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// It is strictly forbidden to use the from_code method, respected Microsoft decided to define
// duplicate codes, but by defining different constant names, therefore, when using these codes,
// it is mandatory to use through from_name, and not from_code. Otherwise, it may cause undefined
// behavior or an unknown exception. Because one code corresponds to several constants.

use super::{RawError};

#[derive(Clone, Debug, Copy, Eq, Hash, Ord, PartialEq, PartialOrd)]
pub enum XACTENGINE {
    XACTENGINE_E_ALREADYINITIALIZED,
    XACTENGINE_E_NOTINITIALIZED,
    XACTENGINE_E_EXPIRED,
    XACTENGINE_E_NONOTIFICATIONCALLBACK,
    XACTENGINE_E_NOTIFICATIONREGISTERED,
    XACTENGINE_E_INVALIDUSAGE,
    XACTENGINE_E_INVALIDDATA,
    XACTENGINE_E_INSTANCELIMITFAILTOPLAY,
    XACTENGINE_E_NOGLOBALSETTINGS,
    XACTENGINE_E_INVALIDVARIABLEINDEX,
    XACTENGINE_E_INVALIDCATEGORY,
    XACTENGINE_E_INVALIDCUEINDEX,
    XACTENGINE_E_INVALIDWAVEINDEX,
    XACTENGINE_E_INVALIDTRACKINDEX,
    XACTENGINE_E_INVALIDSOUNDOFFSETORINDEX,
    XACTENGINE_E_READFILE,
    XACTENGINE_E_UNKNOWNEVENT,
    XACTENGINE_E_INCALLBACK,
    XACTENGINE_E_NOWAVEBANK,
    XACTENGINE_E_SELECTVARIATION,
    XACTENGINE_E_MULTIPLEAUDITIONENGINES,
    XACTENGINE_E_WAVEBANKNOTPREPARED,
    XACTENGINE_E_NORENDERER,
    XACTENGINE_E_INVALIDENTRYCOUNT,
    XACTENGINE_E_AUDITION_WRITEFILE,
    XACTENGINE_E_AUDITION_NOSOUNDBANK,
    XACTENGINE_E_AUDITION_INVALIDRPCINDEX,
    XACTENGINE_E_AUDITION_MISSINGDATA,
    XACTENGINE_E_AUDITION_UNKNOWNCOMMAND,
    XACTENGINE_E_AUDITION_INVALIDDSPINDEX,
}

impl XACTENGINE {
    pub fn code(&self) -> u32 {
        return match self {
            XACTENGINE::XACTENGINE_E_ALREADYINITIALIZED => 0x8AC70001 as u32,
            XACTENGINE::XACTENGINE_E_NOTINITIALIZED => 0x8AC70002 as u32,
            XACTENGINE::XACTENGINE_E_EXPIRED => 0x8AC70003 as u32,
            XACTENGINE::XACTENGINE_E_NONOTIFICATIONCALLBACK => 0x8AC70004 as u32,
            XACTENGINE::XACTENGINE_E_NOTIFICATIONREGISTERED => 0x8AC70005 as u32,
            XACTENGINE::XACTENGINE_E_INVALIDUSAGE => 0x8AC70006 as u32,
            XACTENGINE::XACTENGINE_E_INVALIDDATA => 0x8AC70007 as u32,
            XACTENGINE::XACTENGINE_E_INSTANCELIMITFAILTOPLAY => 0x8AC70008 as u32,
            XACTENGINE::XACTENGINE_E_NOGLOBALSETTINGS => 0x8AC70009 as u32,
            XACTENGINE::XACTENGINE_E_INVALIDVARIABLEINDEX => 0x8AC7000A as u32,
            XACTENGINE::XACTENGINE_E_INVALIDCATEGORY => 0x8AC7000B as u32,
            XACTENGINE::XACTENGINE_E_INVALIDCUEINDEX => 0x8AC7000C as u32,
            XACTENGINE::XACTENGINE_E_INVALIDWAVEINDEX => 0x8AC7000D as u32,
            XACTENGINE::XACTENGINE_E_INVALIDTRACKINDEX => 0x8AC7000E as u32,
            XACTENGINE::XACTENGINE_E_INVALIDSOUNDOFFSETORINDEX => 0x8AC7000F as u32,
            XACTENGINE::XACTENGINE_E_READFILE => 0x8AC70010 as u32,
            XACTENGINE::XACTENGINE_E_UNKNOWNEVENT => 0x8AC70011 as u32,
            XACTENGINE::XACTENGINE_E_INCALLBACK => 0x8AC70012 as u32,
            XACTENGINE::XACTENGINE_E_NOWAVEBANK => 0x8AC70013 as u32,
            XACTENGINE::XACTENGINE_E_SELECTVARIATION => 0x8AC70014 as u32,
            XACTENGINE::XACTENGINE_E_MULTIPLEAUDITIONENGINES => 0x8AC70015 as u32,
            XACTENGINE::XACTENGINE_E_WAVEBANKNOTPREPARED => 0x8AC70016 as u32,
            XACTENGINE::XACTENGINE_E_NORENDERER => 0x8AC70017 as u32,
            XACTENGINE::XACTENGINE_E_INVALIDENTRYCOUNT => 0x8AC70018 as u32,
            XACTENGINE::XACTENGINE_E_AUDITION_WRITEFILE => 0x8AC70101 as u32,
            XACTENGINE::XACTENGINE_E_AUDITION_NOSOUNDBANK => 0x8AC70102 as u32,
            XACTENGINE::XACTENGINE_E_AUDITION_INVALIDRPCINDEX => 0x8AC70103 as u32,
            XACTENGINE::XACTENGINE_E_AUDITION_MISSINGDATA => 0x8AC70104 as u32,
            XACTENGINE::XACTENGINE_E_AUDITION_UNKNOWNCOMMAND => 0x8AC70105 as u32,
            XACTENGINE::XACTENGINE_E_AUDITION_INVALIDDSPINDEX => 0x8AC70106 as u32,
        }
    }

    pub fn error(&self) -> RawError {
        return match self {
            XACTENGINE::XACTENGINE_E_ALREADYINITIALIZED => RawError::Kind(XACTENGINE::XACTENGINE_E_ALREADYINITIALIZED),
            XACTENGINE::XACTENGINE_E_NOTINITIALIZED => RawError::Kind(XACTENGINE::XACTENGINE_E_NOTINITIALIZED),
            XACTENGINE::XACTENGINE_E_EXPIRED => RawError::Kind(XACTENGINE::XACTENGINE_E_EXPIRED),
            XACTENGINE::XACTENGINE_E_NONOTIFICATIONCALLBACK => RawError::Kind(XACTENGINE::XACTENGINE_E_NONOTIFICATIONCALLBACK),
            XACTENGINE::XACTENGINE_E_NOTIFICATIONREGISTERED => RawError::Kind(XACTENGINE::XACTENGINE_E_NOTIFICATIONREGISTERED),
            XACTENGINE::XACTENGINE_E_INVALIDUSAGE => RawError::Kind(XACTENGINE::XACTENGINE_E_INVALIDUSAGE),
            XACTENGINE::XACTENGINE_E_INVALIDDATA => RawError::Kind(XACTENGINE::XACTENGINE_E_INVALIDDATA),
            XACTENGINE::XACTENGINE_E_INSTANCELIMITFAILTOPLAY => RawError::Kind(XACTENGINE::XACTENGINE_E_INSTANCELIMITFAILTOPLAY),
            XACTENGINE::XACTENGINE_E_NOGLOBALSETTINGS => RawError::Kind(XACTENGINE::XACTENGINE_E_NOGLOBALSETTINGS),
            XACTENGINE::XACTENGINE_E_INVALIDVARIABLEINDEX => RawError::Kind(XACTENGINE::XACTENGINE_E_INVALIDVARIABLEINDEX),
            XACTENGINE::XACTENGINE_E_INVALIDCATEGORY => RawError::Kind(XACTENGINE::XACTENGINE_E_INVALIDCATEGORY),
            XACTENGINE::XACTENGINE_E_INVALIDCUEINDEX => RawError::Kind(XACTENGINE::XACTENGINE_E_INVALIDCUEINDEX),
            XACTENGINE::XACTENGINE_E_INVALIDWAVEINDEX => RawError::Kind(XACTENGINE::XACTENGINE_E_INVALIDWAVEINDEX),
            XACTENGINE::XACTENGINE_E_INVALIDTRACKINDEX => RawError::Kind(XACTENGINE::XACTENGINE_E_INVALIDTRACKINDEX),
            XACTENGINE::XACTENGINE_E_INVALIDSOUNDOFFSETORINDEX => RawError::Kind(XACTENGINE::XACTENGINE_E_INVALIDSOUNDOFFSETORINDEX),
            XACTENGINE::XACTENGINE_E_READFILE => RawError::Kind(XACTENGINE::XACTENGINE_E_READFILE),
            XACTENGINE::XACTENGINE_E_UNKNOWNEVENT => RawError::Kind(XACTENGINE::XACTENGINE_E_UNKNOWNEVENT),
            XACTENGINE::XACTENGINE_E_INCALLBACK => RawError::Kind(XACTENGINE::XACTENGINE_E_INCALLBACK),
            XACTENGINE::XACTENGINE_E_NOWAVEBANK => RawError::Kind(XACTENGINE::XACTENGINE_E_NOWAVEBANK),
            XACTENGINE::XACTENGINE_E_SELECTVARIATION => RawError::Kind(XACTENGINE::XACTENGINE_E_SELECTVARIATION),
            XACTENGINE::XACTENGINE_E_MULTIPLEAUDITIONENGINES => RawError::Kind(XACTENGINE::XACTENGINE_E_MULTIPLEAUDITIONENGINES),
            XACTENGINE::XACTENGINE_E_WAVEBANKNOTPREPARED => RawError::Kind(XACTENGINE::XACTENGINE_E_WAVEBANKNOTPREPARED),
            XACTENGINE::XACTENGINE_E_NORENDERER => RawError::Kind(XACTENGINE::XACTENGINE_E_NORENDERER),
            XACTENGINE::XACTENGINE_E_INVALIDENTRYCOUNT => RawError::Kind(XACTENGINE::XACTENGINE_E_INVALIDENTRYCOUNT),
            XACTENGINE::XACTENGINE_E_AUDITION_WRITEFILE => RawError::Kind(XACTENGINE::XACTENGINE_E_AUDITION_WRITEFILE),
            XACTENGINE::XACTENGINE_E_AUDITION_NOSOUNDBANK => RawError::Kind(XACTENGINE::XACTENGINE_E_AUDITION_NOSOUNDBANK),
            XACTENGINE::XACTENGINE_E_AUDITION_INVALIDRPCINDEX => RawError::Kind(XACTENGINE::XACTENGINE_E_AUDITION_INVALIDRPCINDEX),
            XACTENGINE::XACTENGINE_E_AUDITION_MISSINGDATA => RawError::Kind(XACTENGINE::XACTENGINE_E_AUDITION_MISSINGDATA),
            XACTENGINE::XACTENGINE_E_AUDITION_UNKNOWNCOMMAND => RawError::Kind(XACTENGINE::XACTENGINE_E_AUDITION_UNKNOWNCOMMAND),
            XACTENGINE::XACTENGINE_E_AUDITION_INVALIDDSPINDEX => RawError::Kind(XACTENGINE::XACTENGINE_E_AUDITION_INVALIDDSPINDEX),
        }
    }

    pub fn description(&self) -> &'static str {
        return match self {
            XACTENGINE::XACTENGINE_E_ALREADYINITIALIZED => "The engine is already initialized.",
            XACTENGINE::XACTENGINE_E_NOTINITIALIZED => "The engine has not been initialized.",
            XACTENGINE::XACTENGINE_E_EXPIRED => "The engine has expired (demo or pre-release version).",
            XACTENGINE::XACTENGINE_E_NONOTIFICATIONCALLBACK => "No notification callback.",
            XACTENGINE::XACTENGINE_E_NOTIFICATIONREGISTERED => "Notification already registered.",
            XACTENGINE::XACTENGINE_E_INVALIDUSAGE => "Invalid usage.",
            XACTENGINE::XACTENGINE_E_INVALIDDATA => "Invalid data.",
            XACTENGINE::XACTENGINE_E_INSTANCELIMITFAILTOPLAY => "A sound failed to play due to the instance limit.",
            XACTENGINE::XACTENGINE_E_NOGLOBALSETTINGS => "Global Settings are not loaded.",
            XACTENGINE::XACTENGINE_E_INVALIDVARIABLEINDEX => "Invalid variable index.",
            XACTENGINE::XACTENGINE_E_INVALIDCATEGORY => "Invalid category.",
            XACTENGINE::XACTENGINE_E_INVALIDCUEINDEX => "Invalid cue index.",
            XACTENGINE::XACTENGINE_E_INVALIDWAVEINDEX => "Invalid wave index.",
            XACTENGINE::XACTENGINE_E_INVALIDTRACKINDEX => "Invalid track index.",
            XACTENGINE::XACTENGINE_E_INVALIDSOUNDOFFSETORINDEX => "Invalid sound offset or index.",
            XACTENGINE::XACTENGINE_E_READFILE => "Error reading a file.",
            XACTENGINE::XACTENGINE_E_UNKNOWNEVENT => "Unknown event type.",
            XACTENGINE::XACTENGINE_E_INCALLBACK => "Invalid call of a method or function from callback.",
            XACTENGINE::XACTENGINE_E_NOWAVEBANK => "No wavebank exists for the specified operation.",
            XACTENGINE::XACTENGINE_E_SELECTVARIATION => "Unable to select a variation.",
            XACTENGINE::XACTENGINE_E_MULTIPLEAUDITIONENGINES => "Attempted to create more that one audition engine.",
            XACTENGINE::XACTENGINE_E_WAVEBANKNOTPREPARED => "The wavebank is not prepared.",
            XACTENGINE::XACTENGINE_E_NORENDERER => "No audio device can be found.",
            XACTENGINE::XACTENGINE_E_INVALIDENTRYCOUNT => "Invalid entry count for channel maps.",
            XACTENGINE::XACTENGINE_E_AUDITION_WRITEFILE => "An error occurred writing a file during auditioning.",
            XACTENGINE::XACTENGINE_E_AUDITION_NOSOUNDBANK => "Missing a sound bank.",
            XACTENGINE::XACTENGINE_E_AUDITION_INVALIDRPCINDEX => "Missing an RPC curve.",
            XACTENGINE::XACTENGINE_E_AUDITION_MISSINGDATA => "Missing data for an audition command.",
            XACTENGINE::XACTENGINE_E_AUDITION_UNKNOWNCOMMAND => "Unknown command.",
            XACTENGINE::XACTENGINE_E_AUDITION_INVALIDDSPINDEX => "Missing a DSP parameter.",
        }
    }

    pub fn from_name(name: &str) -> XACTENGINE {
        return match name {
            "XACTENGINE_E_ALREADYINITIALIZED" => XACTENGINE::XACTENGINE_E_ALREADYINITIALIZED,
            "XACTENGINE_E_NOTINITIALIZED" => XACTENGINE::XACTENGINE_E_NOTINITIALIZED,
            "XACTENGINE_E_EXPIRED" => XACTENGINE::XACTENGINE_E_EXPIRED,
            "XACTENGINE_E_NONOTIFICATIONCALLBACK" => XACTENGINE::XACTENGINE_E_NONOTIFICATIONCALLBACK,
            "XACTENGINE_E_NOTIFICATIONREGISTERED" => XACTENGINE::XACTENGINE_E_NOTIFICATIONREGISTERED,
            "XACTENGINE_E_INVALIDUSAGE" => XACTENGINE::XACTENGINE_E_INVALIDUSAGE,
            "XACTENGINE_E_INVALIDDATA" => XACTENGINE::XACTENGINE_E_INVALIDDATA,
            "XACTENGINE_E_INSTANCELIMITFAILTOPLAY" => XACTENGINE::XACTENGINE_E_INSTANCELIMITFAILTOPLAY,
            "XACTENGINE_E_NOGLOBALSETTINGS" => XACTENGINE::XACTENGINE_E_NOGLOBALSETTINGS,
            "XACTENGINE_E_INVALIDVARIABLEINDEX" => XACTENGINE::XACTENGINE_E_INVALIDVARIABLEINDEX,
            "XACTENGINE_E_INVALIDCATEGORY" => XACTENGINE::XACTENGINE_E_INVALIDCATEGORY,
            "XACTENGINE_E_INVALIDCUEINDEX" => XACTENGINE::XACTENGINE_E_INVALIDCUEINDEX,
            "XACTENGINE_E_INVALIDWAVEINDEX" => XACTENGINE::XACTENGINE_E_INVALIDWAVEINDEX,
            "XACTENGINE_E_INVALIDTRACKINDEX" => XACTENGINE::XACTENGINE_E_INVALIDTRACKINDEX,
            "XACTENGINE_E_INVALIDSOUNDOFFSETORINDEX" => XACTENGINE::XACTENGINE_E_INVALIDSOUNDOFFSETORINDEX,
            "XACTENGINE_E_READFILE" => XACTENGINE::XACTENGINE_E_READFILE,
            "XACTENGINE_E_UNKNOWNEVENT" => XACTENGINE::XACTENGINE_E_UNKNOWNEVENT,
            "XACTENGINE_E_INCALLBACK" => XACTENGINE::XACTENGINE_E_INCALLBACK,
            "XACTENGINE_E_NOWAVEBANK" => XACTENGINE::XACTENGINE_E_NOWAVEBANK,
            "XACTENGINE_E_SELECTVARIATION" => XACTENGINE::XACTENGINE_E_SELECTVARIATION,
            "XACTENGINE_E_MULTIPLEAUDITIONENGINES" => XACTENGINE::XACTENGINE_E_MULTIPLEAUDITIONENGINES,
            "XACTENGINE_E_WAVEBANKNOTPREPARED" => XACTENGINE::XACTENGINE_E_WAVEBANKNOTPREPARED,
            "XACTENGINE_E_NORENDERER" => XACTENGINE::XACTENGINE_E_NORENDERER,
            "XACTENGINE_E_INVALIDENTRYCOUNT" => XACTENGINE::XACTENGINE_E_INVALIDENTRYCOUNT,
            "XACTENGINE_E_AUDITION_WRITEFILE" => XACTENGINE::XACTENGINE_E_AUDITION_WRITEFILE,
            "XACTENGINE_E_AUDITION_NOSOUNDBANK" => XACTENGINE::XACTENGINE_E_AUDITION_NOSOUNDBANK,
            "XACTENGINE_E_AUDITION_INVALIDRPCINDEX" => XACTENGINE::XACTENGINE_E_AUDITION_INVALIDRPCINDEX,
            "XACTENGINE_E_AUDITION_MISSINGDATA" => XACTENGINE::XACTENGINE_E_AUDITION_MISSINGDATA,
            "XACTENGINE_E_AUDITION_UNKNOWNCOMMAND" => XACTENGINE::XACTENGINE_E_AUDITION_UNKNOWNCOMMAND,
            "XACTENGINE_E_AUDITION_INVALIDDSPINDEX" => XACTENGINE::XACTENGINE_E_AUDITION_INVALIDDSPINDEX,
        }
    }
    pub fn from_code(code: u32) -> XACTENGINE {
        return match code {
            0x8AC70001 => XACTENGINE::XACTENGINE_E_ALREADYINITIALIZED,
            0x8AC70002 => XACTENGINE::XACTENGINE_E_NOTINITIALIZED,
            0x8AC70003 => XACTENGINE::XACTENGINE_E_EXPIRED,
            0x8AC70004 => XACTENGINE::XACTENGINE_E_NONOTIFICATIONCALLBACK,
            0x8AC70005 => XACTENGINE::XACTENGINE_E_NOTIFICATIONREGISTERED,
            0x8AC70006 => XACTENGINE::XACTENGINE_E_INVALIDUSAGE,
            0x8AC70007 => XACTENGINE::XACTENGINE_E_INVALIDDATA,
            0x8AC70008 => XACTENGINE::XACTENGINE_E_INSTANCELIMITFAILTOPLAY,
            0x8AC70009 => XACTENGINE::XACTENGINE_E_NOGLOBALSETTINGS,
            0x8AC7000A => XACTENGINE::XACTENGINE_E_INVALIDVARIABLEINDEX,
            0x8AC7000B => XACTENGINE::XACTENGINE_E_INVALIDCATEGORY,
            0x8AC7000C => XACTENGINE::XACTENGINE_E_INVALIDCUEINDEX,
            0x8AC7000D => XACTENGINE::XACTENGINE_E_INVALIDWAVEINDEX,
            0x8AC7000E => XACTENGINE::XACTENGINE_E_INVALIDTRACKINDEX,
            0x8AC7000F => XACTENGINE::XACTENGINE_E_INVALIDSOUNDOFFSETORINDEX,
            0x8AC70010 => XACTENGINE::XACTENGINE_E_READFILE,
            0x8AC70011 => XACTENGINE::XACTENGINE_E_UNKNOWNEVENT,
            0x8AC70012 => XACTENGINE::XACTENGINE_E_INCALLBACK,
            0x8AC70013 => XACTENGINE::XACTENGINE_E_NOWAVEBANK,
            0x8AC70014 => XACTENGINE::XACTENGINE_E_SELECTVARIATION,
            0x8AC70015 => XACTENGINE::XACTENGINE_E_MULTIPLEAUDITIONENGINES,
            0x8AC70016 => XACTENGINE::XACTENGINE_E_WAVEBANKNOTPREPARED,
            0x8AC70017 => XACTENGINE::XACTENGINE_E_NORENDERER,
            0x8AC70018 => XACTENGINE::XACTENGINE_E_INVALIDENTRYCOUNT,
            0x8AC70101 => XACTENGINE::XACTENGINE_E_AUDITION_WRITEFILE,
            0x8AC70102 => XACTENGINE::XACTENGINE_E_AUDITION_NOSOUNDBANK,
            0x8AC70103 => XACTENGINE::XACTENGINE_E_AUDITION_INVALIDRPCINDEX,
            0x8AC70104 => XACTENGINE::XACTENGINE_E_AUDITION_MISSINGDATA,
            0x8AC70105 => XACTENGINE::XACTENGINE_E_AUDITION_UNKNOWNCOMMAND,
            0x8AC70106 => XACTENGINE::XACTENGINE_E_AUDITION_INVALIDDSPINDEX,
        }
    }
}
