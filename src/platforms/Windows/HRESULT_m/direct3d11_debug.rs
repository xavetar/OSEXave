/*
 * Copyright 2023 Stanislav Mikhailov (xavetar)
 *
 * Licensed under the Creative Commons Zero v1.0 Universal (CC0) License.
 * You may obtain a copy of the License at
 *
 *     http://creativecommons.org/publicdomain/zero/1.0/
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the CC0 license is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// It is strictly forbidden to use the from_code method, respected Microsoft decided to define
// duplicate codes, but by defining different constant names, therefore, when using these codes,
// it is mandatory to use through from_name, and not from_code. Otherwise, it may cause undefined
// behavior or an unknown exception. Because one code corresponds to several constants.

use super::{RawError};

#[derive(Clone, Debug, Copy, Eq, Hash, Ord, PartialEq, PartialOrd)]
pub enum DIRECT3D11_DEBUG {
    APOERR_ALREADY_INITIALIZED,
    APOERR_NOT_INITIALIZED,
    APOERR_FORMAT_NOT_SUPPORTED,
    APOERR_INVALID_APO_CLSID,
    APOERR_BUFFERS_OVERLAP,
    APOERR_ALREADY_UNLOCKED,
    APOERR_NUM_CONNECTIONS_INVALID,
    APOERR_INVALID_OUTPUT_MAXFRAMECOUNT,
    APOERR_INVALID_CONNECTION_FORMAT,
    APOERR_APO_LOCKED,
    APOERR_INVALID_COEFFCOUNT,
    APOERR_INVALID_COEFFICIENT,
    APOERR_INVALID_CURVE_PARAM,
}

impl DIRECT3D11_DEBUG {
    pub fn code(&self) -> u32 {
        return match self {
            DIRECT3D11_DEBUG::APOERR_ALREADY_INITIALIZED => 0x887D0001 as u32,
            DIRECT3D11_DEBUG::APOERR_NOT_INITIALIZED => 0x887D0002 as u32,
            DIRECT3D11_DEBUG::APOERR_FORMAT_NOT_SUPPORTED => 0x887D0003 as u32,
            DIRECT3D11_DEBUG::APOERR_INVALID_APO_CLSID => 0x887D0004 as u32,
            DIRECT3D11_DEBUG::APOERR_BUFFERS_OVERLAP => 0x887D0005 as u32,
            DIRECT3D11_DEBUG::APOERR_ALREADY_UNLOCKED => 0x887D0006 as u32,
            DIRECT3D11_DEBUG::APOERR_NUM_CONNECTIONS_INVALID => 0x887D0007 as u32,
            DIRECT3D11_DEBUG::APOERR_INVALID_OUTPUT_MAXFRAMECOUNT => 0x887D0008 as u32,
            DIRECT3D11_DEBUG::APOERR_INVALID_CONNECTION_FORMAT => 0x887D0009 as u32,
            DIRECT3D11_DEBUG::APOERR_APO_LOCKED => 0x887D000A as u32,
            DIRECT3D11_DEBUG::APOERR_INVALID_COEFFCOUNT => 0x887D000B as u32,
            DIRECT3D11_DEBUG::APOERR_INVALID_COEFFICIENT => 0x887D000C as u32,
            DIRECT3D11_DEBUG::APOERR_INVALID_CURVE_PARAM => 0x887D000D as u32,
        }
    }

    pub fn error(&self) -> RawError {
        return match self {
            DIRECT3D11_DEBUG::APOERR_ALREADY_INITIALIZED => RawError::Kind(DIRECT3D11_DEBUG::APOERR_ALREADY_INITIALIZED),
            DIRECT3D11_DEBUG::APOERR_NOT_INITIALIZED => RawError::Kind(DIRECT3D11_DEBUG::APOERR_NOT_INITIALIZED),
            DIRECT3D11_DEBUG::APOERR_FORMAT_NOT_SUPPORTED => RawError::Kind(DIRECT3D11_DEBUG::APOERR_FORMAT_NOT_SUPPORTED),
            DIRECT3D11_DEBUG::APOERR_INVALID_APO_CLSID => RawError::Kind(DIRECT3D11_DEBUG::APOERR_INVALID_APO_CLSID),
            DIRECT3D11_DEBUG::APOERR_BUFFERS_OVERLAP => RawError::Kind(DIRECT3D11_DEBUG::APOERR_BUFFERS_OVERLAP),
            DIRECT3D11_DEBUG::APOERR_ALREADY_UNLOCKED => RawError::Kind(DIRECT3D11_DEBUG::APOERR_ALREADY_UNLOCKED),
            DIRECT3D11_DEBUG::APOERR_NUM_CONNECTIONS_INVALID => RawError::Kind(DIRECT3D11_DEBUG::APOERR_NUM_CONNECTIONS_INVALID),
            DIRECT3D11_DEBUG::APOERR_INVALID_OUTPUT_MAXFRAMECOUNT => RawError::Kind(DIRECT3D11_DEBUG::APOERR_INVALID_OUTPUT_MAXFRAMECOUNT),
            DIRECT3D11_DEBUG::APOERR_INVALID_CONNECTION_FORMAT => RawError::Kind(DIRECT3D11_DEBUG::APOERR_INVALID_CONNECTION_FORMAT),
            DIRECT3D11_DEBUG::APOERR_APO_LOCKED => RawError::Kind(DIRECT3D11_DEBUG::APOERR_APO_LOCKED),
            DIRECT3D11_DEBUG::APOERR_INVALID_COEFFCOUNT => RawError::Kind(DIRECT3D11_DEBUG::APOERR_INVALID_COEFFCOUNT),
            DIRECT3D11_DEBUG::APOERR_INVALID_COEFFICIENT => RawError::Kind(DIRECT3D11_DEBUG::APOERR_INVALID_COEFFICIENT),
            DIRECT3D11_DEBUG::APOERR_INVALID_CURVE_PARAM => RawError::Kind(DIRECT3D11_DEBUG::APOERR_INVALID_CURVE_PARAM),
        }
    }

    pub fn description(&self) -> &'static str {
        return match self {
            DIRECT3D11_DEBUG::APOERR_ALREADY_INITIALIZED => "The object has already been initialized.",
            DIRECT3D11_DEBUG::APOERR_NOT_INITIALIZED => "Object/structure is not initialized.",
            DIRECT3D11_DEBUG::APOERR_FORMAT_NOT_SUPPORTED => "A pin supporting the format cannot be found.",
            DIRECT3D11_DEBUG::APOERR_INVALID_APO_CLSID => "Invalid CLSID in an APO Initialization structure.",
            DIRECT3D11_DEBUG::APOERR_BUFFERS_OVERLAP => "Buffers overlap on an APO that does not accept in-place buffers.",
            DIRECT3D11_DEBUG::APOERR_ALREADY_UNLOCKED => "APO is already in an unlocked state.",
            DIRECT3D11_DEBUG::APOERR_NUM_CONNECTIONS_INVALID => "Number of input or output connections not valid on this APO.",
            DIRECT3D11_DEBUG::APOERR_INVALID_OUTPUT_MAXFRAMECOUNT => "Output maxFrameCount not large enough.",
            DIRECT3D11_DEBUG::APOERR_INVALID_CONNECTION_FORMAT => "Invalid connection format for this operation.",
            DIRECT3D11_DEBUG::APOERR_APO_LOCKED => "APO is locked ready to process and can not be changed.",
            DIRECT3D11_DEBUG::APOERR_INVALID_COEFFCOUNT => "Invalid coefficient count.",
            DIRECT3D11_DEBUG::APOERR_INVALID_COEFFICIENT => "Invalid coefficient.",
            DIRECT3D11_DEBUG::APOERR_INVALID_CURVE_PARAM => "An invalid curve parameter was specified.",
        }
    }

    pub fn from_name(name: &str) -> DIRECT3D11_DEBUG {
        return match name {
            "APOERR_ALREADY_INITIALIZED" => DIRECT3D11_DEBUG::APOERR_ALREADY_INITIALIZED,
            "APOERR_NOT_INITIALIZED" => DIRECT3D11_DEBUG::APOERR_NOT_INITIALIZED,
            "APOERR_FORMAT_NOT_SUPPORTED" => DIRECT3D11_DEBUG::APOERR_FORMAT_NOT_SUPPORTED,
            "APOERR_INVALID_APO_CLSID" => DIRECT3D11_DEBUG::APOERR_INVALID_APO_CLSID,
            "APOERR_BUFFERS_OVERLAP" => DIRECT3D11_DEBUG::APOERR_BUFFERS_OVERLAP,
            "APOERR_ALREADY_UNLOCKED" => DIRECT3D11_DEBUG::APOERR_ALREADY_UNLOCKED,
            "APOERR_NUM_CONNECTIONS_INVALID" => DIRECT3D11_DEBUG::APOERR_NUM_CONNECTIONS_INVALID,
            "APOERR_INVALID_OUTPUT_MAXFRAMECOUNT" => DIRECT3D11_DEBUG::APOERR_INVALID_OUTPUT_MAXFRAMECOUNT,
            "APOERR_INVALID_CONNECTION_FORMAT" => DIRECT3D11_DEBUG::APOERR_INVALID_CONNECTION_FORMAT,
            "APOERR_APO_LOCKED" => DIRECT3D11_DEBUG::APOERR_APO_LOCKED,
            "APOERR_INVALID_COEFFCOUNT" => DIRECT3D11_DEBUG::APOERR_INVALID_COEFFCOUNT,
            "APOERR_INVALID_COEFFICIENT" => DIRECT3D11_DEBUG::APOERR_INVALID_COEFFICIENT,
            "APOERR_INVALID_CURVE_PARAM" => DIRECT3D11_DEBUG::APOERR_INVALID_CURVE_PARAM,
        }
    }
    pub fn from_code(code: u32) -> DIRECT3D11_DEBUG {
        return match code {
            0x887D0001 => DIRECT3D11_DEBUG::APOERR_ALREADY_INITIALIZED,
            0x887D0002 => DIRECT3D11_DEBUG::APOERR_NOT_INITIALIZED,
            0x887D0003 => DIRECT3D11_DEBUG::APOERR_FORMAT_NOT_SUPPORTED,
            0x887D0004 => DIRECT3D11_DEBUG::APOERR_INVALID_APO_CLSID,
            0x887D0005 => DIRECT3D11_DEBUG::APOERR_BUFFERS_OVERLAP,
            0x887D0006 => DIRECT3D11_DEBUG::APOERR_ALREADY_UNLOCKED,
            0x887D0007 => DIRECT3D11_DEBUG::APOERR_NUM_CONNECTIONS_INVALID,
            0x887D0008 => DIRECT3D11_DEBUG::APOERR_INVALID_OUTPUT_MAXFRAMECOUNT,
            0x887D0009 => DIRECT3D11_DEBUG::APOERR_INVALID_CONNECTION_FORMAT,
            0x887D000A => DIRECT3D11_DEBUG::APOERR_APO_LOCKED,
            0x887D000B => DIRECT3D11_DEBUG::APOERR_INVALID_COEFFCOUNT,
            0x887D000C => DIRECT3D11_DEBUG::APOERR_INVALID_COEFFICIENT,
            0x887D000D => DIRECT3D11_DEBUG::APOERR_INVALID_CURVE_PARAM,
        }
    }
}
